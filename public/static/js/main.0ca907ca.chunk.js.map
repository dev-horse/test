{"version":3,"sources":["components/layouts/TopNav.jsx","actionConstants.js","actions/userActions.js","components/layouts/Template.jsx","components/UI/TableReact/index.js","components/pages/Home/Home.jsx","components/Helpers/Loading.js","utils/history.js","actions/requestAdapter.js","actions/profileActions.js","components/pages/Home/HomeContainer.js","routes/routes.js","components/pages/NotFound/NotFound.jsx","components/pages/Profile/Profile.jsx","components/pages/Profile/ProfileContainer.js","routes/App.js","registerServiceWorker.js","reducers/userReducer.js","reducers/profileReducer.js","reducers/index.js","utils/store.js","index.js"],"names":["TopNav","logoutClick","e","_this","props","logoutFnc","react_default","a","createElement","NavLink","className","to","exact","Component","actionConstants","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","FECTH_PROFILE_SUCCESS","FETCH_PROFILE_FALURE","FILTER_PROFILE_SUCCESS","FILTER_PROFILE_FAILURE","QUERY_PROFILE_SUCCESS","QUERY_PROFILE_FAILURE","userActions","login","username","password","dispatch","getState","userInfo","userRole","jwtToken","sessionStorage","setItem","JSON","stringify","type","data","Unauthorize","logout","removeItem","isRegistered","Template","_Component","context","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logoutRequest","dataFromChild","state","redirectToReferrer","inherits","createClass","key","value","Redirect","TopNav_TopNav","children","connect","user","TableReact","react_table_es","columns","getTrProps","Home","handleChange","setState","defineProperty","target","id","handleClick","preventDefault","_this$state","name","age","submitForm","onRowClick","rowInfo","column","instance","onClick","rowClick","layouts_Template","onChange","TableReact_TableReact","profilesList","Loading","React","history","createBrowserHistory","URL","get","_x","_x2","_get","apply","arguments","_callee","url","params","headers","_params","regenerator_default","wrap","_context","prev","next","Error","Content-Type","Authorization","token","body","method","concat","withCredentials","_results","abrupt","sent","t0","stop","_callee3","resp","_context3","axios","status","error","message","statusText","profileActions","fetchProfile","_ref","asyncToGenerator","mark","onSuccess","onError","queryUrl","formatQueryString","isEmpty","queryProfile","_ref4","_callee2","_context2","console","log","resource","size","length","undefined","page","sort","p","qs","order","HomeContainer","onFilter","Name","Age","goToProfileDetail","push","original","parse","getItem","Header","accessor","Cell","row","height","src","image","d","Home_Home","Loading_Loading","nextProps","profiles","routes","path","title","breadcrumb","breadcrumb_link","component","requireAuth","NotFound","Profile","profileDetail","ProfileContainer","match","profileId","Profile_Profile","profile","App","Router","Switch","map","route","index","Route","NotFoundContainer","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","userReducer","action","_state","START_QUERY","errorText","profileReducer","combinedReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","routes_App","document","getElementById","process","origin","addEventListener","fetch","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.0ca907ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default class TopNav extends Component {\n  logoutClick = e => {\n    this.props.logoutFnc();\n  };\n\n  render() {\n    return (\n      <div>\n        <ul>\n          <li>\n            <NavLink className=\"active\" to=\"/\" exact>\n              Home\n            </NavLink>\n          </li>\n          {/* <li style={{ float: 'right' }}>\n            <a onClick={this.logoutClick}>Log out</a>\n          </li> */}\n        </ul>\n      </div>\n    );\n  }\n}\n","export const actionConstants = {\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT_REQUEST: 'LOGOUT_REQUEST',\n  FECTH_PROFILE_SUCCESS: 'FECTH_PROFILE_SUCCESS',\n  FETCH_PROFILE_FALURE: 'FETCH_PROFILE_FALURE',\n  FILTER_PROFILE_SUCCESS: 'FILTER_PROFILE_SUCCESS',\n  FILTER_PROFILE_FAILURE: 'FILTER_PROFILE_FAILURE',\n  QUERY_PROFILE_SUCCESS: 'QUERY_PROFILE_SUCCESS',\n  QUERY_PROFILE_FAILURE: 'QUERY_PROFILE_FAILURE',\n};\n","import { actionConstants } from '../actionConstants';\n\nexport const userActions = {\n  login,\n  logout\n  // register,\n  // getUsers,\n  // inviteUser,\n  // getInvitations,\n  // queryInvitation\n};\n\nfunction login(username, password) {\n  return (dispatch, getState) => {\n    if (username === 'admin' && password === '123456') {\n      let userInfo = {\n        username: username,\n        userRole: 'SuperAdmin',\n        jwtToken: 'thangml'\n      };\n      sessionStorage.setItem('userInfo', JSON.stringify(userInfo));\n      dispatch({\n        type: actionConstants.LOGIN_SUCCESS,\n        data: userInfo\n      });\n    } else if (username === 'user' && password === '123456') {\n      let userInfo = {\n        username: username,\n        userRole: 'User',\n        jwtToken: 'thangmc'\n      };\n      sessionStorage.setItem('userInfo', JSON.stringify(userInfo));\n      dispatch({\n        type: actionConstants.LOGIN_SUCCESS,\n        data: userInfo\n      });\n    } else {\n      dispatch({\n        type: actionConstants.LOGIN_FAILURE,\n        data: { Unauthorize: ['Invalid Username or Password'] }\n      });\n    }\n  };\n}\n\n// function register(\n//   firstName,\n//   lastName,\n//   displayName,\n//   email,\n//   password,\n//   invitationId\n// ) {\n//   return (dispatch, getState) => {\n//     accountService\n//       .register(firstName, lastName, displayName, email, password, invitationId)\n//       .then(resp => {\n//         console.log(resp);\n//         return dispatch({\n//           type: actionConstants.LOGIN_REQUEST,\n//           data: resp.data\n//         });\n//       })\n//       .catch(error => {\n//         return dispatch({\n//           type: actionConstants.LOGIN_FAILURE,\n//           data: error.message\n//         });\n//       });\n//   };\n// }\n\n// function getUsers(token) {\n//   return dispatch => {\n//     accountService\n//       .getUsers(token)\n//       .then(resp => {\n//         return dispatch({\n//           type: actionConstants.GET_USERS_SUCCESS,\n//           data: resp.data\n//         });\n//       })\n//       .catch(error => {\n//         return dispatch({\n//           type: actionConstants.GET_USERS_FAILURE,\n//           data: error.message\n//         });\n//       });\n//   };\n// }\n\n// function inviteUser(\n//   token,\n//   firstName,\n//   lastName,\n//   email,\n//   tenantToJoinId,\n//   roleName\n// ) {\n//   return dispatch => {\n//     accountService\n//       .inviteUser(token, firstName, lastName, email, tenantToJoinId, roleName)\n//       .then(resp => {\n//         return dispatch({\n//           type: actionConstants.INVITE_USER_SUCCESS,\n//           data: resp\n//         });\n//       })\n//       .catch(error => {\n//         return dispatch({\n//           type: actionConstants.INVITE_USER_FAILURE,\n//           data: error.message\n//         });\n//       });\n//   };\n// }\n\n// function getInvitations(token) {\n//   return dispatch => {\n//     accountService\n//       .getInvitations(token)\n//       .then(resp => {\n//         return dispatch({\n//           type: actionConstants.GET_INVITATIONS_SUCCESS,\n//           data: resp.data\n//         });\n//       })\n//       .catch(error => {\n//         return dispatch({\n//           type: actionConstants.GET_INVITATIONS_FAILURE,\n//           data: error.message\n//         });\n//       });\n//   };\n// }\n\n// function queryInvitation(invitationId) {\n//   return dispatch => {\n//     accountService\n//       .queryInvitation(invitationId)\n//       .then(resp => {\n//         return dispatch({\n//           type: actionConstants.QUERY_INVITATION_SUCCESS,\n//           data: resp.data\n//         });\n//       })\n//       .catch(error => {\n//         return dispatch({\n//           type: actionConstants.QUERY_INVITATION_FAILURE,\n//           data: error.response\n//         });\n//       });\n//   };\n// }\n\nfunction logout() {\n  return (dispatch, getState) => {\n    sessionStorage.removeItem('userInfo');\n    let userInfo = {\n      username: '',\n      userRole: '',\n      isRegistered: false,\n      jwtToken: '' //because data response contains only jwt token\n    };\n    dispatch({\n      type: actionConstants.LOGOUT_REQUEST,\n      data: userInfo\n    });\n  };\n}\n","import React, { Component } from 'react';\nimport './template.css';\nimport TopNav from './TopNav';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { userActions } from '../../actions/userActions';\n\nexport class Template extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      redirectToReferrer: false,\n    };\n  }\n  logoutRequest = dataFromChild => {\n    this.props.logout();\n  };\n  // componentWillReceiveProps(nextProps) {\n  //   if (!nextProps.user.userInfo.jwtToken) {\n  //     this.setState({\n  //       redirectToReferrer: true\n  //     });\n  //   }\n  // }\n  render() {\n    if (this.state.redirectToReferrer) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <div>\n        <TopNav logoutFnc={this.logoutRequest} />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  userActions\n)(Template);\n","import React, { Component } from 'react';\nimport ReactTable from 'react-table';\nimport 'react-table/react-table.css';\n\nexport default class TableReact extends Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <ReactTable\n        data={this.props.data}\n        columns={this.props.columns}\n        getTrProps={this.props.getTrProps}\n      />\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Template from '../../layouts/Template';\nimport TableReact from '../../UI/TableReact';\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      age: null,\n    };\n  }\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  handleClick = e => {\n    e.preventDefault();\n    const { name, age } = this.state;\n    this.props.submitForm({ name, age });\n  };\n  onRowClick = (state, rowInfo, column, instance) => {\n    return {\n      onClick: e => {\n        this.props.rowClick(rowInfo);\n      },\n    };\n  };\n  render() {\n    return (\n      <Template>\n        <div>\n          <input id=\"name\" onChange={this.handleChange} />\n          <input id=\"age\" onChange={this.handleChange} />\n          <button onClick={this.handleClick}>Filter</button>\n        </div>\n        <TableReact\n          data={this.props.profilesList}\n          columns={this.props.columns}\n          getTrProps={this.onRowClick}\n        />\n      </Template>\n    );\n  }\n}\n","import React from 'react';\n\nexport default class Loading extends React.Component {\n  render() {\n    return (\n      <div>\n        <h1>Loading ...</h1>\n      </div>\n    );\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","import axios from 'axios';\nconst URL = 'http://localhost:8081';\n\nexport async function get(url, params) {\n  try {\n    if (!url) {\n      throw new Error('input url not found!');\n    }\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    if (params && 'token' in params) {\n      headers.Authorization = params.token;\n    }\n\n    let data = {};\n    if (params && 'body' in params) {\n      data = params.body;\n    }\n    let _params = {\n      method: 'get',\n      url: `${URL}/${url}`,\n      headers,\n      withCredentials: false,\n      data,\n    };\n    return await _results(_params);\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function post(url, params) {\n  try {\n    if (!url) {\n      throw new Error('input url not found!');\n    }\n\n    const headers = {\n      'Content-Type': 'application/json',\n    };\n\n    if (params && 'token' in params) {\n      headers.Authorization = params.token;\n    }\n\n    let data = {};\n    if (params && 'body' in params) {\n      data = params.body;\n    }\n    let _params = {\n      method: 'post',\n      url: `${URL}/${url}`,\n      headers,\n      withCredentials: false,\n      data,\n    };\n\n    return await _results(_params);\n  } catch (error) {\n    throw error;\n  }\n}\n\n/* TEST FUNCTION */\n\n// async function _results(params) {\n//   await axios(params)\n//     .then(response => {\n//       console.log(response);\n//     })\n//     .catch(error => {\n//       console.log(error.response);\n//     });\n// }\n\nasync function _results(params) {\n  try {\n    const resp = await axios(params);\n\n    if (resp.status === 200 || resp.status === 201) {\n      if (resp.data.error) {\n        throw resp.data.message;\n      }\n      return resp.data;\n    }\n    throw new Error(`${resp.statusText}`);\n  } catch (error) {\n    throw error;\n  }\n}\n","import { actionConstants } from '../actionConstants';\nimport { history } from '../utils/history';\nimport { post, get } from './requestAdapter';\nimport qs from 'qs';\nimport isEmpty from 'lodash/isEmpty';\n\nexport const profileActions = {\n  fetchProfile,\n  queryProfile,\n};\n\nfunction fetchProfile(params) {\n  return async dispatch => {\n    function onSuccess(resp) {\n      dispatch({\n        type: actionConstants.FECTH_PROFILE_SUCCESS,\n        data: resp.data,\n      });\n      return;\n    }\n    function onError(error) {\n      dispatch({ type: actionConstants.FETCH_PROFILE_FALURE, data: error });\n      return;\n    }\n    try {\n      let queryUrl = formatQueryString('members');\n      if (params && !isEmpty(params)) {\n        queryUrl = formatQueryString('members', 10, 1, params);\n      }\n      const resp = await get(queryUrl);\n      return onSuccess(resp);\n    } catch (error) {\n      return onError(error);\n    }\n  };\n}\n\nfunction queryProfile(id) {\n  return async dispatch => {\n    function onSuccess(resp) {\n      console.log(resp, 'resppp');\n      dispatch({\n        type: actionConstants.QUERY_PROFILE_SUCCESS,\n        data: resp,\n      });\n      return true;\n    }\n    function onError(error) {\n      dispatch({ type: actionConstants.QUERY_PROFILE_FAILURE, data: error });\n      return false;\n    }\n    try {\n      const resp = await get(`members/${id}`);\n      console.log(resp);\n      return onSuccess(resp);\n    } catch (error) {\n      return onError(error);\n    }\n  };\n}\n\nconst formatQueryString = (\n  resource,\n  size = 10,\n  page = 1,\n  params = null,\n  sort = null\n) => {\n  // const skip = (page - 1) * size;\n  let queryUrl = `${resource}?page=${page}&limit=${size}`;\n  if (params && !isEmpty(params)) {\n    for (var p in params) {\n      if (!params[p]) {\n        delete params[p];\n      }\n    }\n    queryUrl += '&' + qs.stringify(params);\n  }\n  if (sort && !isEmpty(sort)) {\n    queryUrl += `&_sort=${sort.order === 'DESC' ? '-' : ''}${sort.key}`;\n  }\n  return queryUrl;\n};\n","import React, { Component } from 'react';\nimport Home from './Home';\nimport Loading from '../../Helpers/Loading';\nimport { profileActions } from '../../../actions/profileActions';\nimport { connect } from 'react-redux';\nimport { history } from '../../../utils/history';\n\nexport class HomeContainer extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      userInfo: JSON.parse(sessionStorage.getItem('userInfo')) || {},\n      profilesList: [],\n    };\n    this.columns = [\n      {\n        Header: 'Image',\n        accessor: 'image',\n        Cell: row => {\n          return (\n            <div>\n              <img\n                height={34}\n                src={`http://localhost:8081/images/${row.original.image}`}\n              />\n            </div>\n          );\n        },\n      },\n      {\n        Header: 'Name',\n        accessor: 'name',\n      },\n      {\n        Header: 'Age',\n        id: 'age',\n        accessor: d => d.age,\n      },\n    ];\n  }\n  onFilter = ({ name, age }) => {\n    let params = {};\n    params.Name = name;\n    params.Age = age;\n    this.props.fetchProfile(params);\n  };\n\n  goToProfileDetail = resp => {\n    history.push(`/profile/${resp.original.id}`);\n  };\n\n  componentDidMount() {\n    this.props.fetchProfile();\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.profiles.profilesList) {\n      return {\n        profilesList: nextProps.profiles.profilesList,\n      };\n    }\n    return null;\n  }\n\n  render() {\n    if (this.state.profilesList.length) {\n      return (\n        <Home\n          submitForm={this.onFilter}\n          profilesList={this.state.profilesList}\n          columns={this.columns}\n          rowClick={this.goToProfileDetail}\n        />\n      );\n    } else {\n      return <Loading />;\n    }\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profiles: state.profiles,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  profileActions\n)(HomeContainer);\n","import HomeContainer from '../components/pages/Home/HomeContainer';\n\nexport const routes = [\n  {\n    path: '/',\n    title: 'Home',\n    breadcrumb: 'Home',\n    breadcrumb_link: true,\n    exact: true,\n    component: HomeContainer,\n    requireAuth: true,\n  },\n];\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Sorry, this page is unavailable</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Template from '../../layouts/Template';\n\nexport default class Profile extends Component {\n  render() {\n    const { profileDetail } = this.props;\n    return (\n      <Template>\n        <div className=\"container\">\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th>Avatar</th>\n                <th>CEO Name</th>\n                <th>Age</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <img\n                    src={`http://localhost:8081/images/${profileDetail.image}`}\n                  />\n                </td>\n                <td>{profileDetail.name}</td>\n                <td>{profileDetail.age}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </Template>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Profile from './Profile';\nimport { history } from '../../../utils/history';\nimport { profileActions } from '../../../actions/profileActions';\nimport { connect } from 'react-redux';\n\nexport class ProfileContainer extends Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      profileDetail: {},\n    };\n  }\n  componentDidMount() {\n    if (this.props.match.params && 'profileId' in this.props.match.params) {\n      this.props.queryProfile(this.props.match.params.profileId);\n    } else {\n      history.push('/');\n    }\n  }\n  static getDerivedStateFromProps(nextProps) {\n    console.log(nextProps);\n    if (nextProps.profile.profileDetail) {\n      return {\n        profileDetail: nextProps.profile.profileDetail,\n      };\n    }\n    return null;\n  }\n  render() {\n    return <Profile profileDetail={this.state.profileDetail} />;\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    profile: state.profiles,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  profileActions\n)(ProfileContainer);\n","import React, { Component } from 'react';\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport { routes } from './routes';\nimport { NotFoundContainer } from '../components/pages/NotFound/NotFoundContainer';\nimport ProfileContainer from '../components/pages/Profile/ProfileContainer';\nimport { AuthenticatedRoute } from './AuthenticatedRoute';\nimport { history } from '../utils/history';\n\nconst profilePath = '/profile/:profileId';\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          {routes.map((route, index) => {\n            return (\n              <Route\n                key={index}\n                path={route.path}\n                component={route.component}\n                exact={route.exact}\n              />\n            );\n          })}\n          <Route path={profilePath} component={ProfileContainer} exact />\n          <Route component={NotFoundContainer} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { actionConstants } from '../actionConstants';\nconst userReducer = (state = {}, action) => {\n  var _state = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case actionConstants.START_QUERY:\n      return _state;\n    case actionConstants.LOGIN_SUCCESS:\n      _state.userInfo = action.data;\n      return _state;\n    case actionConstants.LOGIN_FAILURE:\n      _state.errorText = action.data;\n      return _state;\n    case actionConstants.LOGOUT_REQUEST:\n      _state.userInfo = action.data;\n      return _state;\n    default:\n      return _state;\n  }\n};\n\nexport default userReducer;\n","import { actionConstants } from '../actionConstants';\nconst profileReducer = (state = {}, action) => {\n  var _state = JSON.parse(JSON.stringify(state));\n  switch (action.type) {\n    case actionConstants.START_QUERY:\n      return _state;\n    case actionConstants.FECTH_PROFILE_SUCCESS:\n      _state.profilesList = action.data;\n      return _state;\n    case actionConstants.FETCH_PROFILE_FALURE:\n      _state.errorText = action.data;\n      return _state;\n    case actionConstants.QUERY_PROFILE_SUCCESS:\n      _state.profileDetail = action.data;\n      return _state;\n    case actionConstants.QUERY_PROFILE_FAILURE:\n      _state.errorText = action.data;\n      return _state;\n    default:\n      return _state;\n  }\n};\n\nexport default profileReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './userReducer';\nimport profileReducer from './profileReducer';\n\nconst combinedReducer = combineReducers({\n  user: userReducer,\n  profiles: profileReducer,\n});\n\nexport default combinedReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport combinedReducer from '../reducers';\n\nexport const store = createStore(combinedReducer, applyMiddleware(thunk));\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css'\nimport App from './routes/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport { store } from './utils/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}